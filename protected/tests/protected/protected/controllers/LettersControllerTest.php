<?php

/**
 * Generated by PHPUnit_SkeletonGenerator on 2013-07-06 at 12:00:13.
 */
class LettersControllerTest extends PHPUnit_Framework_TestCase {

    /**
     * @var LettersController
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $this->object = new LettersController;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
        
    }

    /**
     * @covers LettersController::filters
     * @todo   Implement testFilters().
     */
    public function testFilters() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers LettersController::accessRules
     * @todo   Implement testAccessRules().
     */
    public function testAccessRules() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers LettersController::actionIndex
     * @todo   Implement testActionIndex().
     */
    public function testActionIndex() {
        $this->assertTrue($this->object->index()); 
    }

    /**
     * @covers LettersController::actionSearch
     * @todo   Implement testActionSearch().
     */
    public function testActionSearch() {        
       // true 
        $_POST['data']= "ahmad";
        $_POST2['data']= "mohammed";
        $this->assertTrue($this->object->Search($_POST));
        $this->assertTrue($this->object->Search($_POST2));
                
        //false
        $_POST3['data']= -50;
        $this->assertTrue($this->object->Search($_POST3));  
        $this->assertTrue($this->object->Search());  
    }

    /**
     * @covers LettersController::actionSearchProperty
     * @todo   Implement testActionSearchProperty().
     */
    public function testActionSearchProperty() {
        // true 
        $_POST['data']= "ahmad";
        $_POST2['data']= "mohammed";
        $this->assertTrue($this->object->SearchProperty($_POST));
        $this->assertTrue($this->object->SearchProperty($_POST2));
                
        //false
        $_POST3['data']= -50;
        $this->assertTrue($this->object->SearchProperty($_POST3));  
        $this->assertTrue($this->object->SearchProperty());
        
    }

    /**
     * @covers LettersController::actionTemp
     * @todo   Implement testActionTemp().
     */
    public function testActionTemp() {
        $this->assertTrue($this->object->Temp()); 
    }

    /**
     * @covers LettersController::actionView
     * @todo   Implement testActionView().
     */
    public function testActionView() {
        // true 
        $this->assertTrue($this->object->view(1));
        $this->assertTrue($this->object->view(2));
        
        
        //false
        $this->assertTrue($this->object->view(-1));
    }

    /**
     * @covers LettersController::actionUpdate
     * @todo   Implement testActionUpdate().
     */
    public function testActionUpdate() {
        // true 
        $this->assertTrue($this->object->update(1));
        $this->assertTrue($this->object->update(2));
        
        
        // false
        $this->assertTrue($this->object->update(-1));   
    }

    /**
     * @covers LettersController::actionupdateletter
     * @todo   Implement testActionupdateletter().
     */
    public function testActionupdateletter() {
        
         // true 
        $_POST['ftext']= "ahmad";
        $_POST2['ftext']= "mohammed";
        $this->assertTrue($this->object->updateletter($_POST));
        $this->assertTrue($this->object->updateletter($_POST2));
                
        //false                
        $this->assertTrue($this->object->updateletter());
    }

    /**
     * @covers LettersController::actionchoose
     * @todo   Implement testActionchoose().
     */
    public function testActionchoose() {
        // true 
        $_POST['mtype']= 0;       
        $_POST2['mtype']= 1;
        $this->assertTrue($this->object->choose($_POST));
        $this->assertTrue($this->object->choose($_POST2));
                
        //false                
        $this->assertTrue($this->object->choose());
    }

    /**
     * @covers LettersController::actiongeneratefile
     * @todo   Implement testActiongeneratefile().
     */
    public function testActiongeneratefile() {
        
        // true 
        $_POST['letterid']= 1;       
        $_POST['landid']= 1;
        $_POST['destination']= "destination test";
        $_POST['landprice']= "112";
        
        $_POST['landdesc']= "land description";
        $_POST['cuowners']= "Current Owners test";
        $_POST['prowners']= "Previous Owners test";
        $_POST['lands']= "Lands test";
        
        $_POST['customerid']= 1;
        
        $this->assertTrue($this->object->generatefile($_POST));
       
        
         // false 
        $_POST['letterid']= -1;       
        $_POST['landid']= -1;
        $_POST['destination']= "destination test";
        $_POST['landprice']= "112";
        
        $_POST['landdesc']= "land description";
        $_POST['cuowners']= "Current Owners test";
        $_POST['prowners']= "Previous Owners test";
        $_POST['lands']= "Lands test";
        
        $_POST['customerid']= -1;
        
        $this->assertTrue($this->object->generatefile($_POST));
                                        
    }

    /**
     * @covers LettersController::actionautow
     * @todo   Implement testActionautow().
     */
    public function testActionautow() {
        
        // true
        $_GET['term']= -1;        
        $this->assertTrue($this->object->generatefile($_GET));
        
        //false
        $this->assertTrue($this->object->generatefile());
    }

    /**
     * @covers LettersController::actionDelete
     * @todo   Implement testActionDelete().
     */
    public function testActionDelete() {
        // true 
        $this->assertTrue($this->object->delete(1));
        $this->assertTrue($this->object->delete(2));
                
        //false
        $this->assertTrue($this->object->delete(-1));     
    }

    /**
     * @covers LettersController::loadModel
     * @todo   Implement testLoadModel().
     */
    public function testLoadModel() {
         // true 
        $this->assertTrue($this->object->loadModel(1));
        $this->assertTrue($this->object->loadModel(2));
                
        //false
        $this->assertTrue($this->object->loadModel(-1));  
    }

    /**
     * @covers LettersController::actionconvert
     * @todo   Implement testActionconvert().
     */
    public function testActionconvert() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers LettersController::actionopen
     * @todo   Implement testActionopen().
     */
    public function testActionopen() {
        // true 
        $this->assertTrue($this->object->open(1));
        $this->assertTrue($this->object->open(2));
        
        
        //false
        $this->assertTrue($this->object->open(-1));
    }

    /**
     * @covers LettersController::actionviewExportedLetters
     * @todo   Implement testActionviewExportedLetters().
     */
    public function testActionviewExportedLetters() {
        // true 
        $this->assertTrue($this->object->viewExportedLetters(1));
        $this->assertTrue($this->object->viewExportedLetters(2));
        
        
        //false
        $this->assertTrue($this->object->viewExportedLetters(-1));
    }

    /**
     * @covers LettersController::actiondownload
     * @todo   Implement testActiondownload().
     */
    public function testActiondownload() {
       // true 
        $this->assertTrue($this->object->download(1));
        $this->assertTrue($this->object->download(2));
        
        
        //false
        $this->assertTrue($this->object->download(-1));
    }

    /**
     * @covers LettersController::actiondownloadletter
     * @todo   Implement testActiondownloadletter().
     */
    public function testActiondownloadletter() {
       
       // true
       $_POST['ftext']= "text test";        
       $_POST['title']= "title test";       
       $this->assertTrue($this->object->downloadletter($_POST));
       
       // false
       $this->assertTrue($this->object->downloadletter());
       
    }

    /**
     * @covers LettersController::actiongosave
     * @todo   Implement testActiongosave().
     */
    public function testActiongosave() {
                
        // true
       $_POST['ftitle']= "text test";                    
       $this->assertTrue($this->object->gosave($_POST));
       
       // false
       $this->assertTrue($this->object->gosave());
       
       
    }

    /**
     * @covers LettersController::actionlettersave
     * @todo   Implement testActionlettersave().
     */
    public function testActionlettersave() {
         // true
       $_POST['lettertext']= "text test";                    
       $this->assertTrue($this->object->lettersave($_POST));
       
       // false
       $this->assertTrue($this->object->lettersave());
    }

    /**
     * @covers LettersController::actionletterupdate
     * @todo   Implement testActionletterupdate().
     */
    public function testActionletterupdate() {
        // true
       $_POST['ftext']= "text test";        
       $_POST['title']= "title test";       
       $this->assertTrue($this->object->letterupdate($_POST));
       
       // false
       $this->assertTrue($this->object->letterupdate());
    }

    /**
     * @covers LettersController::actiondoupdate
     * @todo   Implement testActiondoupdate().
     */
    public function testActiondoupdate() {
       // true
       $_POST['ftext']= "text test";        
       $_POST['title']= "title test";       
       $this->assertTrue($this->object->doupdate(1,$_POST));
       
       // false
       $this->assertTrue($this->object->doupdate(-1));
    }

}
