<?php

/**
 * This is the model class for table "LandScheme".
 *
 * The followings are the available columns in table 'LandScheme':
 * @property integer $SchemeID
 * @property string $LandID
 * @property string $SchemeDrawing
 * @property integer $MunicipalityID
 * @property string $DateInserted
 *
 * The followings are the available model relations:
 * @property ContractsMaster[] $contractsMasters
 * @property DeedMaster[] $deedMasters
 * @property HajzMaster[] $hajzMasters
 * @property LandMaster $land
 */
class LandScheme extends CActiveRecord
{
	/**
	 * Returns the static model of the specified AR class.
	 * @param string $className active record class name.
	 * @return LandScheme the static model class
	 */
	public static function model($className=__CLASS__)
	{
		return parent::model($className);
	}

	/**
	 * @return string the associated database table name
	 */
	public function tableName()
	{
		return 'LandScheme';
	}

	/**
	 * @return array validation rules for model attributes.
	 */
/*	public function rules()
	{
		// NOTE: you should only define rules for those attributes that
		// will receive user inputs.
		return array(
			array('LandID, SchemeDrawing, MunicipalityID, DateInserted', 'required'),
			array('MunicipalityID', 'numerical', 'integerOnly'=>true),
			array('LandID', 'length', 'max'=>10),
			// The following rule is used by search().
			// Please remove those attributes that should not be searched.
			array('SchemeID, LandID, SchemeDrawing, MunicipalityID, DateInserted', 'safe', 'on'=>'search'),
		);
	}*/

	/**
	 * @return array relational rules.
	 */
	public function relations()
	{
		// NOTE: you may need to adjust the relation name and the related
		// class name for the relations automatically generated below.
		return array(
			'contractsMasters' => array(self::HAS_MANY, 'ContractsMaster', 'SchemeID'),
			'deedMasters' => array(self::HAS_MANY, 'DeedMaster', 'SchemeID'),
			'hajzMasters' => array(self::HAS_MANY, 'HajzMaster', 'SchemeID'),
			'land' => array(self::BELONGS_TO, 'LandMaster', 'LandID'),
		);
	}

	/**
	 * @return array customized attribute labels (name=>label)
	 */
	public function attributeLabels()
	{
		return array(
			'SchemeID' => 'Scheme',
			'LandID' => 'Land',
			'SchemeDrawing' => 'Scheme Drawing',
			'MunicipalityID' => 'Municipality',
			'DateInserted' => 'Date Inserted',
		);
	}

	/**
	 * Retrieves a list of models based on the current search/filter conditions.
	 * @return CActiveDataProvider the data provider that can return the models based on the search/filter conditions.
	 */
	public function search()
	{
		// Warning: Please modify the following code to remove attributes that
		// should not be searched.

		$criteria=new CDbCriteria;

		$criteria->compare('SchemeID',$this->SchemeID);
		$criteria->compare('LandID',$this->LandID,true);
		$criteria->compare('SchemeDrawing',$this->SchemeDrawing,true);
		$criteria->compare('MunicipalityID',$this->MunicipalityID);
		$criteria->compare('DateInserted',$this->DateInserted,true);

		return new CActiveDataProvider($this, array(
			'criteria'=>$criteria,
		));
	}
}
